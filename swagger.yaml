openapi: 3.0.0
info:
  title: 04-RealEstate-API
  version: 1.0.0
servers:
  - url: http://{{url}}
tags:
  - name: Auth
  - name: Users
  - name: Address
  - name: Amenities
  - name: Facilities
  - name: Property
  - name: Ratings
  - name: Orders
paths:
  /auth/register:
    post:
      tags:
        - Auth
      summary: Register User
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Hazem
                email:
                  type: string
                  example: hazoomy21@gmail.com
                phoneNumber:
                  type: number
                  example: '+966599802154'
                password:
                  type: string
                  example: secret
                bio:
                  type: string
                  example: >-
                    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed
                    do eiusmod tempor incididunt ut labore et dolore magna
                    aliqua. Ut enim ad minim veniam, quis nostrud exercitation
                    ullamco laboris nisi ut aliquip ex ea commodo consequat.
                profilePicture:
                  type: string
                  format: binary
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /auth/verify-email:
    post:
      tags:
        - Auth
      summary: Verify User Email
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: hazoomy21@gmail.com
                token: '399788'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /auth/login:
    post:
      tags:
        - Auth
      summary: Login User With Email
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: hazoomy21@gmail.com
                password: secret
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /auth/login-with-phone:
    post:
      tags:
        - Auth
      summary: Login With Phone
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                phoneNumber: '+966599802154'
                password: secret
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /auth/forget-password:
    post:
      tags:
        - Auth
      summary: Forget Password
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: hazoomy21@gmail.com
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /auth/reset-password:
    post:
      tags:
        - Auth
      summary: Rest Password
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: hazoomy21@gmail.com
                token: '963126'
                newPassword: secret
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /auth/logout:
    get:
      tags:
        - Auth
      summary: Logout User
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /user:
    get:
      tags:
        - Users
      summary: Get All Users
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /user/f7febe64-1699-4e0f-87bc-99d1d9f543d0:
    get:
      tags:
        - Users
      summary: Get User By Id
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    patch:
      tags:
        - Users
      summary: Update User
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Hazem
                email: hazoomy21@gmail.com
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /user/d8091b0e-bc17-487b-b2f6-86165b9df075:
    delete:
      tags:
        - Users
      summary: Delete User
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /address:
    post:
      tags:
        - Address
      summary: Create Address
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                street: 123 Arafat Street
                country: Egypt
                zipCode: '12312'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Address
      summary: Get All Addresses
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /address/2:
    get:
      tags:
        - Address
      summary: Get Address By Id
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /address/1:
    patch:
      tags:
        - Address
      summary: Update Address
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                street: 123 Arafat Street | UPDATED
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Address
      summary: Delete Address
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /amenities:
    post:
      tags:
        - Amenities
      summary: Create Amenity
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Balacony
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Amenities
      summary: Get All Amenities
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /amenities/1:
    get:
      tags:
        - Amenities
      summary: Get Amenity By Id
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    patch:
      tags:
        - Amenities
      summary: Update Amenity
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Updated
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Amenities
      summary: Delete Amenity
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /facilities:
    post:
      tags:
        - Facilities
      summary: Create Facility
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Homes
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Facilities
      summary: Get All Facilities
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /facilities/1:
    get:
      tags:
        - Facilities
      summary: Get Facility By Id
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    patch:
      tags:
        - Facilities
      summary: Update Facility
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: UPDATED
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Facilities
      summary: Delete Facility
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /property:
    post:
      tags:
        - Property
      summary: Create Property
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: 'Property #1'
                description:
                  type: string
                  example: lorem ipsum
                phoneNumber:
                  type: number
                  example: '+96659904123'
                addressId:
                  type: integer
                  example: '2'
                area:
                  type: integer
                  example: '25'
                roomsNumber:
                  type: integer
                  example: '2'
                bathroomNumber:
                  type: integer
                  example: '1'
                floorsNumber:
                  type: integer
                  example: '5'
                status:
                  type: string
                  example: NEW
                finishType:
                  type: string
                  example: FULL
                price:
                  type: integer
                  example: '150'
                paymentType:
                  type: string
                  example: CASH
                additionalFeatures:
                  type: string
                  example: '["No"]'
                amenityIds:
                  type: string
                  example: '[2]'
                facilityIds:
                  type: string
                  example: '[2]'
                media:
                  type: string
                  format: binary
                propertyType:
                  type: string
                  example: APARTMENT
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Property
      summary: Get All Properties
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /property/1:
    get:
      tags:
        - Property
      summary: Get Property By Id
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    patch:
      tags:
        - Property
      summary: Update Property
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: UPDATED
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Property
      summary: Delete Property
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /review:
    post:
      tags:
        - Ratings
      summary: Create Review
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                rating: 3
                comment: Really good, I recommend it
                propertyId: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Ratings
      summary: Get All Reviews
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /review/1:
    get:
      tags:
        - Ratings
      summary: Get Review By Id
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    patch:
      tags:
        - Ratings
      summary: Update Review
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                rating: 4
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Ratings
      summary: Delete Review
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /orders/cart:
    post:
      tags:
        - Orders
      summary: Add to cart
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                quantity: 1
                propertyId: 2
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Orders
      summary: Get Cart Items
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /orders/checkout:
    post:
      tags:
        - Orders
      summary: Checkout with Stripe
      requestBody:
        content: {}
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /orders/success:
    get:
      tags:
        - Orders
      summary: Handle Success
      parameters:
        - name: session_id
          in: query
          schema:
            type: string
          example: cs_test_a1wth2ZWRw540ZqL6C6rtj1DOYIc8rqIvvdhoyvonromPGSKMIymG3uIpB
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /orders/:
    get:
      tags:
        - Orders
      summary: Get All Orders
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
